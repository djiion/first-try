// Преобразование типов, базовые операторы
/*
const a = 5;
const b = "13";
console.log(typeof(a + b));
console.log(Number(a) + Number(b));
console.log(typeof(Number(a) + Number(b)));
*/

/*
const a = 3;
const b = '2';
console.log(a + b); // 32, строка - автоматическое приведение
console.log(Number(a) + Number(b)); // 5, число - явное приведение
*/


console.log(Boolean(0));

console.log(String(123));

// Значения, которые интуитивно «пустые», вроде 0, пустой строки, null, undefined и NaN, становятся false.

// Операнд – то, к чему применяется оператор. Например, в умножении 5 * 2 есть два операнда: левый операнд равен 5, а правый операнд равен 2. Иногда их называют «аргументами»
// Унарным называется оператор, который применяется к одному операнду.
// Бинарным называется оператор, который применяется к двум операндам.


/*
let x = 1;
x = -x
console.log(x);

let age = "12";
console.log(+age);
*/

/*
Результат a % b – это остаток от целочисленного деления a на b.
console.log( 5 % 2 ); // 1, остаток от деления 5 на 2
console.log( 8 % 3 ); // 2, остаток от деления 8 на 3
console.log( 8 % 4 ); // 0, остаток от деления 8 на 4
*/

// Инкремент ++ увеличивает переменную на 1
// Декремент --  уменьшает переменную на 1


/*
let diff = 15 - 5;
console.log("Результат вычитания чисел:", diff);
console.log(`Результат вычитания чисел: ${diff}`);

let strNum = "10" + 5; // преобразование строка, число работает только с плюсом (string),
// остальное число
console.log(typeof("Результат умножения строки и числа:", strNum));
*/



let firstName = "Jenya";
let age = Number("35");
let isMarried = Boolean(0);

age = age - 6;
console.log(`Меня зовут ${firstName}. Мне ${age} лет. Женат: ${isMarried}`);


